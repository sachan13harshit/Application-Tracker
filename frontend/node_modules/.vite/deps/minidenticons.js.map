{
  "version": 3,
  "sources": ["../../minidenticons/minidenticons.js"],
  "sourcesContent": ["// 9 different colors only for easy distinction (also a sweet spot for collisions)\nconst COLORS_NB = 9\nconst DEFAULT_SATURATION = 95\nconst DEFAULT_LIGHTNESS = 45\n\nconst MAGIC_NUMBER = 5\n\n\n/**\n * @type {(str: string) => number}\n */\nfunction simpleHash(str) {\n    return str.split('')\n        .reduce((hash, char) => (hash ^ char.charCodeAt(0)) * -MAGIC_NUMBER, MAGIC_NUMBER)\n        >>> 2 // 32 bit unsigned integer conversion disregarding last 2 bits for better randomness\n}\n\n/**\n * @type {import('.').minidenticon}\n */\nexport function minidenticon(seed=\"\", saturation=DEFAULT_SATURATION, lightness=DEFAULT_LIGHTNESS, hashFn=simpleHash) {\n    const hash = hashFn(seed)\n    // console.log(\"%c\" + hash.toString(2).padStart(32, \"0\"), \"font-family:monospace\") // uncomment to debug\n    const hue = (hash % COLORS_NB) * (360 / COLORS_NB)\n    return [...Array(seed ? 25 : 0)].reduce((acc, e, i) =>\n        // testing the 15 lowest weight bits of the hash\n        hash & (1 << (i % 15)) ?\n            acc + `<rect x=\"${i > 14 ? 7 - ~~(i / 5) : ~~(i / 5)}\" y=\"${i % 5}\" width=\"1\" height=\"1\"/>`\n        : acc,\n        // xmlns attribute added in case of SVG file generation https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg#sect1\n        `<svg viewBox=\"-1.5 -1.5 8 8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"hsl(${hue} ${saturation}% ${lightness}%)\">`\n    )\n    + '</svg>'\n}\n\n/**\n * @type {void}\n */\nexport const minidenticonSvg =\n    // declared as a pure function to be tree-shaken by the bundler\n    /*@__PURE__*/globalThis.customElements?.get('minidenticon-svg') ? null :\n        globalThis.customElements?.define('minidenticon-svg',\n            class MinidenticonSvg extends HTMLElement {\n                static observedAttributes = ['username', 'saturation', 'lightness']\n                // private fields to allow Terser mangling\n                static #memoized = {}\n                #isConnected = false\n                connectedCallback() {\n                    this.#setContent()\n                    this.#isConnected = true\n                }\n                // attributeChangedCallback() is called for every observed attribute before connectedCallback()\n                attributeChangedCallback() { if (this.#isConnected) this.#setContent() }\n                #setContent() {\n                    const args = MinidenticonSvg.observedAttributes\n                                    .map(key => this.getAttribute(key) || undefined)\n                    const memoKey = args.join(',')\n                    this.innerHTML = MinidenticonSvg.#memoized[memoKey] ??=\n                        // @ts-ignore\n                        minidenticon(...args)\n                }\n            }\n        )\n"],
  "mappings": ";;;;;;;;;AACA,IAAM,YAAY;AAClB,IAAM,qBAAqB;AAC3B,IAAM,oBAAoB;AAE1B,IAAM,eAAe;AAMrB,SAAS,WAAW,KAAK;AACrB,SAAO,IAAI,MAAM,EAAE,EACd,OAAO,CAAC,MAAM,UAAU,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,cAAc,YAAY,MAC7E;AACZ;AAKO,SAAS,aAAa,OAAK,IAAI,aAAW,oBAAoB,YAAU,mBAAmB,SAAO,YAAY;AACjH,QAAM,OAAO,OAAO,IAAI;AAExB,QAAM,MAAO,OAAO,aAAc,MAAM;AACxC,SAAO,CAAC,GAAG,MAAM,OAAO,KAAK,CAAC,CAAC,EAAE;AAAA,IAAO,CAAC,KAAK,GAAG;AAAA;AAAA,MAE7C,OAAQ,KAAM,IAAI,KACd,MAAM,YAAY,IAAI,KAAK,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,IAAI,EAAE,QAAQ,IAAI,CAAC,6BACnE;AAAA;AAAA;AAAA,IAEF,6EAA6E,GAAG,IAAI,UAAU,KAAK,SAAS;AAAA,EAChH,IACE;AACN;AAjCA;AAsCO,IAAM;AAAA;AAAA,IAEI,gBAAW,mBAAX,mBAA2B,IAAI,uBAAsB,QAC9D,gBAAW,mBAAX,mBAA2B;AAAA,IAAO;AAAA,KAC9B,mBAA8B,YAAY;AAAA,MAA1C;AAAA;AAAA;AAII,yCAAe;AAAA;AAAA,MACf,oBAAoB;AAChB,8BAAK,2CAAL;AACA,2BAAK,cAAe;AAAA,MACxB;AAAA;AAAA,MAEA,2BAA2B;AAAE,YAAI,mBAAK,cAAc,uBAAK,2CAAL;AAAA,MAAmB;AAAA,IAS3E,GAhBW,2BACP,8BAJJ,4CAWI,gBAAW,WAAG;AArD9B,UAAAA;AAsDoB,YAAM,OAAO,GAAgB,mBACZ,IAAI,SAAO,KAAK,aAAa,GAAG,KAAK,MAAS;AAC/D,YAAM,UAAU,KAAK,KAAK,GAAG;AAC7B,WAAK,aAAYA,MAAA,iBAAgB,YAAhB,aAAAA,IAAA;AAAA,MAEb,aAAa,GAAG,IAAI;AAAA,IAC5B,GAjBA,cADJ,IACW,sBAAqB,CAAC,YAAY,cAAc,WAAW;AAAA,IAElE,aAHJ,IAGW,WAAY,CAAC,IAHxB;AAAA;AAAA;",
  "names": ["_a"]
}
